<!-- -->
<launch>
  <!-- CARLA connection -->
  <arg name='host' default='localhost'/>
  <arg name='port' default='2000'/>
  <arg name='timeout' default='20'/>

  <!-- Ego vehicle -->
  <arg name='role_name' default='ego_vehicle'/>
  <arg name="vehicle_filter" default='vehicle.*'/>
  <arg name="spawn_point" default="
  314.06,
  137.22,
  0.1,
  0,
  0,
  90
  "/><!-- use comma separated format "x,y,z,roll,pitch,yaw" -->

  <!-- Map to load on startup (either a predefined CARLA town (e.g. 'Town01'), or a OpenDRIVE map file) -->
  <arg name="town" default='Town04_Opt'/>

  <!-- Enable/disable passive mode -->
  <arg name='passive' default=''/>

  <!-- Synchronous mode-->
  <arg name='synchronous_mode_wait_for_vehicle_control_command' default='false'/>
  <arg name='fixed_delta_seconds' default='0.05'/>


  <include file="$(find carla_ros_bridge)/launch/carla_ros_bridge.launch">
    <arg name='host' value='$(arg host)'/>
    <arg name='port' value='$(arg port)'/>
    <arg name='town' value='$(arg town)'/>
    <arg name='timeout' value='$(arg timeout)'/>
    <arg name='passive' value='$(arg passive)'/>
    <arg name='synchronous_mode_wait_for_vehicle_control_command' value='$(arg synchronous_mode_wait_for_vehicle_control_command)'/>
    <arg name='fixed_delta_seconds' value='$(arg fixed_delta_seconds)'/>
  </include>

  <!-- the ego vehicle, that will be controlled by an agent (e.g. carla_ad_agent) -->
  <include file="$(find carla_spawn_objects)/launch/carla_example_ego_vehicle.launch">
    <!-- <arg name="objects_definition_file" value='$(find carla_spawn_objects)/config/objects.json'/> -->
    <arg name="objects_definition_file" value='/home/delcoii/catkin_ws/src/my_configuration/mustang.json'/>
    <arg name='role_name' value='$(arg role_name)'/>
    <arg name="spawn_point_ego_vehicle" value="$(arg spawn_point)"/>
    <arg name="spawn_sensors_only" value="false"/>
  </include>

  <include file="$(find carla_manual_control)/launch/carla_manual_control.launch">
    <arg name='role_name' value='$(arg role_name)'/>
  </include>


  <!-- generate wheel center tf -->
  <param name="front_wheel_pos_x" type="double" value="1.5617858509105815" />
  <param name="rear_wheel_pos_x" type="double" value="-1.3244055556930903" />

  <node pkg="wheel_center_tf" type="wheel_center_tf" name="wheel_center_tf"/>
  <!-- -->

</launch>
